openapi: "3.1.0"
info:
  title: "osm_pathifinding API"
  description: "osm_pathifinding API"
  version: "1.0.0"
servers:
  - url: "https://localhost:8081"
tags:
  - name: "Nodes"
paths:
  /nodes/all:
    get:
      summary: "All nodes from database."
      description: "All nodes from database."
      operationId: "getAllNodesFromDatabase"
      responses:
        "200":
          description: "Nodes from database successfully loaded."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/NodeDTO"
  /nodes/{id}:
    get:
      summary: "Get node by id from database."
      description: ""
      operationId: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeDTO"
  /nodes/add:
    post:
      summary: "Add node."
      description: "Add node"
      operationId: "addNode"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeDTO"
        required: true
      responses:
        "200":
          description: "Node added successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeDTO"
  /nodes/remove:
    delete:
      summary: "Remove node."
      description: "Remove node"
      operationId: "removeNode"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeDTO"
        required: true
      responses:
        "200":
          description: "Node removed successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeDTO"
components:
  schemas:
    StreetDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        isBuilding:
          type: "boolean"
        parent:
          $ref: "#/components/schemas/StreetDTO"
        children:
          type: "array"
          items:
            $ref: "#/components/schemas/StreetDTO"
        street:
          type: "string"
        housenumber:
          type: "string"
        nodes:
          type: "array"
          items:
            $ref: "#/components/schemas/NodeDTO"
    NodeDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        longitude:
          type: "number"
          format: "double"
        latitude:
          type: "number"
          format: "double"
        streets:
          type: "array"
          items:
            $ref: "#/components/schemas/StreetDTO"
      required:
        - "id"
        - "longitude"
        - "latitude"